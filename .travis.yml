language: bash

sudo: false

env:
  global:
    - AWS_DEFAULT_REGION="us-east-1"
    - REPO="${TRAVIS_REPO_SLUG#*/}"
    - OWNER=plus3it
    - DEPLOY_SLUG=$OWNER/$REPO

before_install:
  - TERRAFORM_VERSION=$(curl -sSL https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r -M '.current_version')
  - TERRAFORM_URL="https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
  - echo "TERRAFORM_URL=${TERRAFORM_URL}"
  - curl -sSL -o terraform.zip "$TERRAFORM_URL"
  - unzip terraform.zip && rm -f terraform.zip
  - mkdir -p $HOME/bin
  - export PATH=$PATH:$HOME/bin
  - mv terraform $HOME/bin
  - terraform --version

before_script:
  - echo $JOB
  - echo $TESTCOMMAND

script:
  - bash -c "$TESTCOMMAND"

jobs:
  include:
    - stage: test
      env:
        - JOB="Terraform Format Check"
        - TESTCOMMAND="terraform fmt -check=true"
    - stage: deploy
      env:
        - JOB="Deploy to GitHub Releases"
        - PRIOR_VERSION=$(git describe --abbrev=0 --tags)
        - RELEASE_VERSION=$(grep current_version $TRAVIS_BUILD_DIR/.bumpversion.cfg | sed 's/^.*= //')
        - RELEASE_BODY="* [$REPO v$RELEASE_VERSION changes](https://github.com/$OWNER/$REPO/compare/$PRIOR_VERSION...$RELEASE_VERSION)"
      before_script:
        - echo PRIOR_VERSION=$PRIOR_VERSION
        - echo RELEASE_VERSION=$RELEASE_VERSION
        - echo RELEASE_BODY=$RELEASE_BODY
      script:
        - skip
      deploy:
        provider: releases
        name: $RELEASE_VERSION
        tag_name: $RELEASE_VERSION
        body: $RELEASE_BODY
        draft: false
        api_key:
          secure: lQMlT5d2v/lvHSRw72hSzXl/SlQaXuSMLJHhivlfpaaMEb2m/DPVyl5X37gO18eDFlmhPo34ZiJx7p8dDICerVV8b+atZP/1ULdZ0aWuoJcYhLy4wFj0Ao+xH7YtlE+3BUcgxijhd3031jYQM6aATI8C0ytkHeORCDONYMbn4Nn/98DXoymasL8rNZ4ydD3zThOQSlDx01aSL7j9f+nloIXNEHdmLIhYps6wddPi+JOKJXX1YRyRlFkitPrc9v5NUPtJ3+9On45c5gFM+tkDw0KFhO2eRNdzfx37GndI45Y7Pvgcxc55Soii91ROnktINwtvmhI++CBqnc2GjblXlJsoYGzLtTtAFt8iMUNUYnlCf7qTUfIGkOokBu3cH32TpLpKD7LUj2yCAneBCFTU+dLcw5fKTFrsnEn+W8dYIatyEhDvG7a6iH+U4vGmltWqUowMC25Me4IVMfkVwDgrIDmE8NFH1XkOsC6S7YnnYDDLo3m5QQP2V1QbwW3ww3jLlWMULOOPOwnnWZJSURBEs+NBkAsVi1+QP4RG5B8MQPLVj4XPdKyUrKOeSkwuExxgHIVV6Owors2uk6dyKB6jStCQ+6n8smFS41Y+0Uf+1zq0WAUHCBirfjdu97PFhrncm3eVpSmJxKDdTJZlf5EapeUnvuFgAXWQS1dW3s6So1Q=
        on:
          branch: master
          repo: $DEPLOY_SLUG
          condition: '"$PRIOR_VERSION" != "$RELEASE_VERSION"'
